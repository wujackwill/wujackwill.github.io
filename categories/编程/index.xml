<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>编程 on Jack&#39;s BLOG</title>
    <link>//localhost:4321/categories/%E7%BC%96%E7%A8%8B/</link>
    <description>Recent content in 编程 on Jack&#39;s BLOG</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 30 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="//localhost:4321/categories/%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>excel2eprime开发记</title>
      <link>//localhost:4321/blog/2024-01-30-excel2eprime/</link>
      <pubDate>Tue, 30 Jan 2024 00:00:00 +0000</pubDate>
      <guid>//localhost:4321/blog/2024-01-30-excel2eprime/</guid>
      <description>&lt;h1 id=&#34;1r包编写&#34;&gt;1.R包编写&lt;/h1&gt;&#xA;&lt;p&gt;在大学做语言学实验的时候，经常要把材料分句，从excel中分句再导入到eprime软件里面，但是用excel慢慢分又很麻烦。正好最近在学R，不妨用R写一个快速分句的脚本，过程并不复杂，借助ChatGPT，很快就搞定了，主要的步骤是导入数据，再分单词就行。&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;split_basic &amp;lt;- function(path, col_names = TRUE) {&#xD;&#xA;&#xD;&#xA;  data &amp;lt;- read_excel(path, col_names = col_names)&#xD;&#xA;&#xD;&#xA;  words &amp;lt;- str_split(data[[col_names]], &amp;quot; &amp;quot;)&#xD;&#xA;&#xD;&#xA;  for  (m in seq_len(nrow(data))) {&#xD;&#xA;    w &amp;lt;- 1&#xD;&#xA;    index &amp;lt;- 1&#xD;&#xA;    while (w &amp;lt;= length(words[[m]])) {&#xD;&#xA;      col &amp;lt;- paste(&amp;quot;w&amp;quot;, w, sep = &amp;quot;&amp;quot;)&#xD;&#xA;      data[m, col] &amp;lt;- words[[m]][index]&#xD;&#xA;      w &amp;lt;- w + 1&#xD;&#xA;      index &amp;lt;- index + 1&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;  data &amp;lt;- data %&amp;gt;% slice(-1)&#xD;&#xA;  return(data)&#xD;&#xA;}&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;唯一不足的是，当时的编程水平实在一般，所以在分2*2等实验设计的句子的时候，代码显得很冗长，而且目前还只是单纯地分句子，还不支持拉丁方交叉（好久不用了，我已然忘了怎么拉丁方交叉），等以后有机会说不定会再修改。&lt;/p&gt;&#xA;&lt;h1 id=&#34;2上传到cran&#34;&gt;2.上传到CRAN&lt;/h1&gt;&#xA;&lt;p&gt;因为R包的维护者们很重视代码的质量和一些细节问题，所以这一步比单纯地写包困难得多（当然，也可以不用发布到CRAN，直接挂在Github上，也可以直接下载）。&#xA;首先得先把写好地R包提交给CRAN，然后会经过系统自动检查，这时候如果被拒了，照着系统提示修改就行，通过系统自检之后，会有维护者对R包进行审查，这时候也会有很多修改，经过多轮修改之后，R包才能被发布到CRAN上。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
