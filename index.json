[{"content":" 你家境一般，父母都是普通员工，你在这个城市的生活费是每月一千二，没事下下馆子，一个月添件衣服，想买台相机，咬咬牙才能买双自己喜欢的鞋。你几乎没有特长，不会弹吉他，不会弹钢琴，不会跳舞，不会画画，想学摄影却不会使用图片处理软件，想上台演出却没信心，学校晚会比赛的时候，你经常是站在台下围观的人群里的一员，你与聚光灯环绕的舞台几乎绝缘。你长相一般，不算英俊或者不算美丽，身材不算臃肿但也没什么肌肉或者没什么曲线，平时只是稍稍打扮一下，看上去并不出众，只能算整洁，与人擦肩而过是对方不会多留意你一眼。你的感情也是一般，有时候会遇见自己心仪的那个人，但是总抓不住机会，眨眼间那个人就被其他人俘获，你就开始伤心、抱怨，但是几天之后又开始寻找新的心上人，就这样看着一个个心上人走过，直到你毕业，与其中任何一个都没有发展.总之，你没有什么特别的地方 ，就和周围的千万个普通人一样。你不甘心拿不到奖学金，看见别人得奖学金的时候你会说那完全是突击的结果，于是你开始上自习，不过你只坚持了一星期。你不甘心自己的父辈平平，于是你批评讽刺自己周围的“官二代”、“富二代”，立志要努力学习争取成功，也好让自己的孩子成为“富二代”，你的热情持续了一个星期。你不甘心自己什么特长都没有，于是你开始学弹吉他、买滑轮鞋、借来摄影方面的书籍，你对着镜子微笑着说：“你是最棒的。” 这份虚假的信心维持了一个星期。你不甘心自己没有伴侣，你决心洗心革面重新做人，你删掉电脑里的偶像剧肥皂剧，你收拾起床上的懒人桌，把零食袋子统统扔掉，然后洗了个澡并且修饰了一下自己，你往发型上喷了啫喱水，好让自己看起来很精神，你怀揣着一本成功学的书决定出去走走，开始新的生活。这样的状态，你稀稀拉拉地坚持了一个星期。一个星期之后，你还是和周围千万个人一样，你还是和一星期前的自己一样。\n这段话，我读到了自己。自学编程，没有先学编程语言而是花时间学Vim编辑器，又是装各种插件，又是搭配各种主题；又想了解各种编程语言，最后发现精通多个语言的Hello World，而大神只用VScode也能写程序；写博客，又是尝试各种框架，又是折腾各种功能，RSS必须有，各大主流搜索引擎必须推送上，真到写的时候发现半天憋不出一个字，博客也总共写了那么几篇；用电脑，又是竭尽所能做各种配置，暗黑模式必须要有，调试各种主题，折腾各种Linux系统、虚拟机和WSL，MPV播放器必须要安排上，又是抄各种配置，到最后竟然连视频加音轨都没搞定，再强大的系统，我只会笨拙地用鼠标点来点去，这不是舍本逐末吗？\n学编程，难道基础框架、编程思维和编码能力比用什么编辑器重要吗？ 写博客，难道文字功底，真正沉下心写东西比博客框架更重要？ 用电脑，难道以完成工作为主比用什么主题配色、视频播放器更重要？\n小折腾固然重要，但是我觉得不能把大量的时间花费在折腾影响不大的事情上。很不幸，过了这么多年，我才明白这个道理，很幸运，我还年轻，就想到了这个道理。\n1.有关编程：不再学编程，而是现学现用。 2.有关电脑：不再大折腾，化繁为简。 3.有关读书：沉得下心，读书，读到倦；学习，学到疼。\n言论：\n同事就是同事，舍友就是舍友，不一定都要成为朋友。 见到事儿，叉手立办，条理清晰。 把“创造”和“改进” 这两个过程分开。 你不能 边写作边编辑， 边雕刻边打磨， 边制作边分析。 如果你这么做， 编辑就会阻遏创造。 发明时，不要选择。 画草图时，不要检查。 写初稿时，不要反思。 一开始， 创造性思维必须是自由的， 不受评判的干扰。 第一，敬，恭敬，这是态度，为人态度。第二，静坐，要能坐得住。第三，早起。第四，读书不二，一心地读书。第五，读史。你要知道，原先在科举八股文考试当中，对于史书是不大关注的，但是曾国藩发现，读历史有多么的重要，能帮助一个人建功立业，从古人那里借智慧，所以要读史。第六，谨言。谨言深，管住自己的嘴。第七，养气。第八，保身。第九，日知所亡。啥意思？这出自《论语》，意思就是说，每天知道自己不知道的新知识。第十，月无忘所能。一个月要回顾一下这一个月学的知识，要温习一遍，温故而知新。第十一，作字。一句话，字如其人，就是说还要好好地写字。第十二，夜不出门。不要去过那些腐朽的夜生活。 ","title":"生活反思","uri":"/blog/think/"},{"content":"这是如何阅读一本书系列第一篇，先讲怎么买书。\n一、选书 笔记读书法的第一步，就是选购真正想读、应该读的书，也就是之前介绍的五步骤中的“选书”和“购书”。\n那好书去哪儿找呢？如果你也对读新书感兴趣，我可以提供从简单到高级，三个找书的办法。最简单的办法是看推荐。我几乎买所有英文书都在亚马逊买，而亚马逊的推荐算法很不错，它能从你以往的购买记录中发现你的兴趣，向你推荐新书。有很多书我都是这么发现的，我经常为了找书专门去亚马逊网站闲逛，就好像逛一个实体书店一样。比较专业的办法是跟踪主流媒体的书评。《纽约书评》有可能是美国最值得读的报刊，上面有新书的书评，有高手的综述文章，还有各种新书广告。几乎所有重要媒体都有书评栏目，比如《纽约书评》《纽约客》《经济学人》等媒体。如果你跟踪这些媒体，就不会错过特别重要的好书。但最高级的办法是跟踪作者。你应该对现在活着的、特别有想法、特别能写的人都有谁，心里有个数。什么纳西姆•塔勒布、戴维•布鲁克斯、马尔科姆•格拉德威尔、蒂姆•哈福德、迈克尔•刘易斯（MichaelLewis)、泰勒•科文 这些人刚刚出了什么书，甚至正在写什么书，你读多了就会注意到。选书读好像看足球一样。初等球迷看朋友圈发的射门集锦，一般球迷看世界杯和欧冠这样的大场面，资深球迷则跟踪所有重要球员的动态。\n综上，找到好书的方式无外乎三种：\n1）看推荐：不管是亚马逊商店的，Zlibrary上的，还是某本书里推荐的（这种书在《如何有效阅读一本书：超实用笔记读书法》这本书中被作者称为枢纽书，可以用来以书找书），或者是听广播、看电视得来的都算；\n2）跟踪主流媒体的书评：国外的主要看《纽约书评》《纽约客》《经济学人》等媒体，国内的可以参考豆瓣；\n3）跟踪书的作者：比如我喜欢的作家冯唐、万维钢，他们出的书我一定要看，还有就是一些个人博客，比如比尔盖茨的个人网站就会推荐很多他读的书，值得一看。\n二、把书分类 1. 书的分类 好了，比如说我们在豆瓣上找到了一本书，那如何确定到底是不是我们想读的呢？第一步是先把书分类。\n分析阅读的第一个规则可以这么说：规则一，你一定要知道自己在读的是哪一类书，而且要越早知道越好。最好早在你开始阅读之前就先知道。\n一开始时，你要先检视这本书——用检视阅读先浏览一遍。你读读书名、副标题、目录，然后最少要看看作者的序言、摘要介绍及索引。如果这本书有书衣，要看看出版者的宣传文案。这些都是作者在向你传递讯号，让你知道风朝哪个方向吹。如果你不肯停、看、听，那也不是他的错。\n再强调一次，光是将书籍分类到某一个种类中还是不够的。要跟随第一个阅读步骤，你一定要知道这个种类的书到底是在谈些什么？书名不会告诉你，前言等等也不会说明，有时甚至整本书都说不清楚，只有当你自己心中有一个分类的标准，你才能做明智的判断。\n即，我们在心中应该有一套自己的分类系统，甚至在买书的时候就应该确定这是一本什么书，就应该能回答一个问题，“这是一本什么样的书”。是实用性的还是论说性的，但是有一套分类的标准还不够，我们得有快速把书分类的手段—检视阅读。\n2. 检视阅读 让我们再假设在这情况中还有两个相当常见的因素。第一，你并不知道自己想不想读这本书。你也不知道这本书是否值得做分析阅读。但你觉得，或只要你能挖掘出来，书中的资讯及观点就起码会对你有用处。 其次，让我们假设——常会有这样的状况——你想要发掘所有的东西，但时间却很有限。 在这样的情况下，你一定要做的就是“略读”（skim）整本书，或是有人说成是粗读（pre-read）一样。略读或粗读是检视阅读的第一个子层次。你脑中的目标是要发现这本书值不值得多花时间仔细阅读。其次，就算你决定了不再多花时间仔细阅读这本书，略读也能告诉你许多跟这本书有关的事。\n那比如说，我现在就站在新华书店的一本新书前，在给他分完类之后，我如何快速地判断这本书是不值得我读呢，作者提供了6个步骤：\n1）先看书名页，然后如果有序就先看序。\n2）研究目录页，对这本书的基本架构做概括性的理解。\n3）如果书中附有索引，也要检阅一下\n4）读一下出版者的介绍\n5）开始挑几个看来跟主题息息相关的篇章来看\n6）最后一步，把书打开来，东翻翻西翻翻，念个一两段，有时候连续读几页，但不要太多。\n其中有个问题，有的书是拆封了的，可以翻，有的书被包装好了，看不到内部，这时候就可以记录在购物清单上，稍后在网上先找找电子版阅读。这六个步骤做完了，我们大概可以知道这本书到底在讲什么了，这时候就可以考虑要不要买入。\n三、购物清单 1. 为什么要列购物清单 前几周，我很喜欢在晚上下班之后，逛一圈新华书店，但是漫无目的的闲逛，我总会买一堆看起来有用的书，就像书里说的 赶时间的时候逛书店总有种手忙脚乱的感觉，而且市面上的书都会把书名、封面和腰封上的宣传语写得很有煽动性，让人在目不暇接的同时也会浪费很多时间。考虑到这些情况，我从来不会以“找找看有没有好书”为目的去书店。我只要看看购书清单，就能找到很多本来就很想读的好书了。\n一般来说，去书店的需求分为以下三种：\n① 想读书，但还没决定好读什么\n②寻找某一特定领域、系列或作者的书\n③ 想读某本特定的书\n我一般是第一种：想读书，但还没决定好读什么。所以笔记读书法的第一步，就是选购真正想读、应该读的书，也就是之前介绍的五步骤中的“选书”和“购书”。所以清单列好后，买书的过程被简化为列出读书清单→在书店确认→购买，很简单。 制作购物清单有几个理由：\n1）培养带着目的去读书的目的意识\n2）能帮自己找到真正想读的书\n3）看清自己真正的读书需求\n2. 怎么列购物清单 购书清单，就是一份有别于笔记本的专用表格。\n我会把购书清单用 A4 纸打印出来叠好，收纳在笔记本里（见图 2-2）。以前只是把感兴趣的书名写在笔记本的最后一页以供参考，后来感兴趣的书越来越多，一页纸根本写不下，于是开始使用专门的表格。这样做的好处是，就算原来的笔记本用完了，也可以拿出表格粘贴或者直接夹在新的笔记本里。而且，去书店选书的时候，只要带上印着表格的一张纸就可以了，轻松无比。\n最简单的购书清单，只需要1）书名；2）作者名；3）出版社名就可以了，如下图就足够了：\n当然，作者在书中还提到了他独创的购书清单制作方法，就是在写下书名之前，要在开头做如下记号。，比如说：单行本：T；系列丛书：B，那是因为这部书的作者是日本人，而日文书写比较长，还有一般日本日本书的单行本因为体积很小，除非是特别受欢迎的畅销书，不然很难在书架上找到，所以有必要询问店员或使用搜索引擎进行查找。所以要做这种记号，我们也可以参考，但是我更喜欢电子表格，随身携带，查找方便，所以我暂时不需要这一套方法。\n3. 购物清单的缺点 不过购书清单有个缺点，那就是在使用几个月后，感兴趣的书会越来越多。列在清单里的书目一增加，就会出现一些拖延很久都没有买的书，为了彻底清理这些让人没有阅读热情的书，偶尔要大刀阔斧地对清单进行缩减。\n这很好理解，就像todo清单一样，该清理就清理即可。\n最后，带着列好的购物清单到书店，或者在网上直接下单即可，之后就是如何阅读的事了， 我们下次再谈。\n","title":"阅读一本书（一）：找书","uri":"/blog/2025-01-01-/"},{"content":"一、生活方面 养成好习惯，开始减肥，打造健康的生活方式，戒饮料，五二轻断食。\n二、博客方面 2025年暂时有下面几个主题\n1.崩溃：从《崩溃》这本书出发，总结出国家崩溃的一般框架，再用这套框架阐述苏联的崩溃；\n2.巨人的工具：这一部分是讲讲我心中的巨人，马斯克的时间管理方法，查理·芒格的思维模型，再读乔布斯传，KK的宝贵人生建议，瓦纳尔宝典，高效能人士的七个习惯，还有一些像Paul Graham、 Stephen Wolfram的个人博客，还有一些关于时间管理的书籍，最后用《不可能的技艺》这本书将他们当作示例都串起来，看看其中的公式有没有普遍性；\n3.如何阅读一本书：这一部分是关于读书的方法论，探索如何把一本书吃透，而且要求记得住书里的知识点。从购买的Read to lead读书课程开始讲起，再涉及《如何阅读一本书：超实用笔记读书法》《如何阅读一本书》，辅以万维钢老师的《强力研读书》《厚道的人怎样做思维导图》《全覆盖级的读书》等博文，最后我们一起看看毛主席的读书笔记和读书方法；\n4.宗教相关：这一块暂时比较简单，从密宗开始讲起，然后讲禅宗（虽然我听说南派禅宗严格来说不算宗教）;\n5.贫穷问题：从《贫穷的本质》说起，再讲《为什么有的国家富裕，有的国家贫穷》，再谈谈《国富民穷》，还有2024年的诺贝尔文学奖得主的《Why Nations Fail》，统一串起来，我好奇有的国家为什么贫穷。最后在用逆向思维，思考是不是富裕才是少数，而贫穷是才正常的；\n6.冯唐成事学：这一部分聊聊冯唐写的书，《无所谓》《金线》《了不起》《三十六大》《活着活着就老了》，串起来他的冯唐成事学；\n7.麦肯锡：聊聊麦肯锡这个公司以及由他延伸出的各项技能（笔记术，金字塔原理，金线）\n8.高手：这一部分聊聊万维钢写的书，从《高手》出发， 到《智识分子》《万万没想到》，聊聊得到这个公司以及万维钢老师如何影响了我的世界观；\n9.断舍离、极简主义：通过阅读《断舍离》书籍和一些纪录片，聊聊当代消费主义盛行下如何极简，谈谈豆瓣上的男性抠门小组和禅宗里涉及极简的部分;\n10.其他：剩下来的就是很杂的内容了，从《叫魂》这本书看中国古代的官僚政治体制和各种民间习俗，从《写作这回事》谈谈写作还有一些没有想好的内容。\n三、经济方面 把信用卡、花呗、借呗全部结清，关闭现有的任何信贷产品。再学习一些理财知识，为以后购买基金、债券和股票打下基础。每天、每笔都记账。\n四、技能方面 1.电脑方面：今年的主要任务是基础入门，先把之前学的R语言拾起来，做一些数据分析的小项目；学Python用来入门人工智能领域，主要是机器学习、深度学习，还有一个主要目标是用Minum开源库用来做基础英语教学（可能明年才真正做视频，今年只是熟悉这个库）；再学Rust，当作一门兴趣爱好，先把todo-cli-app的bug修一下，再看看有什么值得参加的开源项目；学习常用的办公软件，学如何把表做得更好看\n2.语言方面：英语水平需要进一步提升，口语可以先暂时缓一缓，但是阅读、写作的水平一定要逼自己提升，尽量多阅读英语国家人正在看的严肃书籍；\n五、游戏方面 1.黑暗之魂三部曲通关（昨天看教程换了巨剑打沙利万，被打得把游戏都卸载了，今天换了装备，连过了几个BOSS，看来还是得用自己用得舒服的）\n2.暗黑破坏神到折磨四，冲100层\n六、几个小目标 1.翻译一个小游戏\n2.翻译两本英语书\n3.精英日课购买的两季全部学完、其他季也刷完\n4.毛选，邓文集读完，圈划完\n","title":"2025年计划","uri":"/blog/2024-12-29-2025/"},{"content":"最近开始写毕业论文了，但是发现插入论文的引用实在是太麻烦了。借助Zotero的帮助，可以直接插入APA格式的引用，但是格式又与学校要求的APA格式有所不同，虽然可以在这个网站进行可视化的修改，但是还是不能完全满足我的要求，于是我想了个办法，在网站里把我能修改的部分比如去掉DOI和序号做好，再在Word里面，通过宏把相关的格式修改好，详细教程可以看这。当然，有个问题是我完全不会用宏，就让GPT帮我写了一个。\nAttribute VB_Name = \"NewMacros1\"\rSub Adjuststyles()\rCall italicstyles\rCall RemoveParagraphIndentationAndDoubleSpacing\rEnd Sub\rPublic Sub italicstyles()\rDim doc As Document\rSet doc = ActiveDocument\rDim para As Paragraph\rDim regex As Object\rSet regex = CreateObject(\"VBScript.RegExp\")\rregex.Pattern = \".*[\\u4e00-\\u9fa5]+, \\d+.*\"\rFor Each para In doc.Paragraphs\rIf regex.Test(para.Range.text) Then\rpara.Range.Font.Italic = False\rEnd If\rNext para\rregex.Pattern = \"([\\u4e00-\\u9fa5]+), \\d+.*\"\rFor Each para In doc.Paragraphs\rDim matches As Object\rSet matches = regex.Execute(para.Range.text)\rFor Each match In matches\rDim matchRange As Range\rSet matchRange = para.Range.Duplicate\rmatchRange.Find.text = match.SubMatches(0)\rmatchRange.Find.Execute\rmatchRange.Font.Italic = True\rNext match\rNext para\rEnd Sub\rPublic Sub RemoveParagraphIndentationAndDoubleSpacing()\rDim para As Paragraph\rDim text As String\rDim i As Long\rFor Each para In ActiveDocument.Paragraphs\rtext = para.Range.text\rIf Left(text, 1) = \"[\" Then\rpara.LeftIndent = 0\rpara.FirstLineIndent = 0\rpara.LineSpacingRule = wdLineSpaceSingle\rEnd If\rNext para\rEnd Sub\r这样一来，格式就完全调好了。使用方法也很简单，简单来说就是在Zotero里导入编辑好的引用格式，再在word里面导入宏，就可以用了。\n注：这篇博客的原稿已佚失，这是新写的稿子。\n","title":"Zotero APA格式调整","uri":"/blog/2024-03-20-zotero-apa/"},{"content":"1.R包编写 在大学做语言学实验的时候，经常要把材料分句，从excel中分句再导入到eprime软件里面，但是用excel慢慢分又很麻烦。正好最近在学R，不妨用R写一个快速分句的脚本，过程并不复杂，借助ChatGPT，很快就搞定了，主要的步骤是导入数据，再分单词就行。 split_basic \u003c- function(path, col_names = TRUE) {\rdata \u003c- read_excel(path, col_names = col_names)\rwords \u003c- str_split(data[[col_names]], \" \")\rfor (m in seq_len(nrow(data))) {\rw \u003c- 1\rindex \u003c- 1\rwhile (w \u003c= length(words[[m]])) {\rcol \u003c- paste(\"w\", w, sep = \"\")\rdata[m, col] \u003c- words[[m]][index]\rw \u003c- w + 1\rindex \u003c- index + 1\r}\r}\rdata \u003c- data %\u003e% slice(-1)\rreturn(data)\r}\r唯一不足的是，当时的编程水平实在一般，所以在分2*2等实验设计的句子的时候，代码显得很冗长，而且目前还只是单纯地分句子，还不支持拉丁方交叉（好久不用了，我已然忘了怎么拉丁方交叉），等以后有机会说不定会再修改。 2.上传到CRAN 因为R包的维护者们很重视代码的质量和一些细节问题，所以这一步比单纯地写包困难得多（当然，也可以不用发布到CRAN，直接挂在Github上，也可以直接下载）。 首先得先把写好地R包提交给CRAN，然后会经过系统自动检查，这时候如果被拒了，照着系统提示修改就行，通过系统自检之后，会有维护者对R包进行审查，这时候也会有很多修改，经过多轮修改之后，R包才能被发布到CRAN上。 R包发布的过程比较痛苦，跟Hadley Wickham说的那样 失败令人沮丧，你得到的反馈可能简单粗暴，你可能觉得遭到了羞辱。与其跟 CRAN 的维护者争辩而可能浪费双方的时间，倒不如： 深呼吸。R包被拒并非世界末日。谁都会遇见。甚至连 R 核心成员都得走同样的流程，享受同等待遇。我被CRAN拒绝的包多了去了。我曾被禁止两周提交东西到CRAN，因为我已有的包里有太多的小问题。 如果你得到的回复让你恼火不堪，那就歇几天，冷静下来再回复。忽略任何人身攻击，努力只做技术上的答复。 但正因为这样，R包才能更有质量吧。 注：这篇博客的原稿已佚失，这是新写的稿子。 ","title":"excel2eprime开发记","uri":"/blog/2024-01-30-excel2eprime/"},{"content":"","title":"","uri":"/about/"},{"content":"\r","title":"Search","uri":"/search/"}]
